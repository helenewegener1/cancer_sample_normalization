!!new_name_DGD := DGD)
# if (add_to_study){
#   df_table_initial <- read.xlsx("table/04_biomarker_scores.xlsx", sheetName = study)
#   df_table_initial$NA. <- NULL
#   df_table_export <- left_join(df_table_initial, df_table)
#
# }
#
# # Write your dataframe to Excel
# write.xlsx(x = df_table_export,
#            file = "table/04_biomarker_scores.xlsx",
#            sheetName = study,
#            row.names = TRUE, # Cannot be FALSE...
#            append = TRUE) # Can only append new sheets
is.null(biomarker_result[[study]])
biomarker_result[[study]]
df_table
left_join(biomarker_result[[study]], df_table)
df_table_export <- left_join(biomarker_result[[study]], df_table)
df_table_export
biomarker_result[[study]]
biomarker_result[[study]] <- df_table_export
biomarker_result
biomarker_result
biomarker_result <- study_score_ssgsea(study = names(mat_tpm_list)[2],
score = 'housekeeping' #names(response_scores)
)
biomarker_result
biomarker_result <- study_score_ssgsea(study = 'Hugo_MEL',
score = 'TGEP' #names(response_scores)
)
biomarker_result
names(response_scores)
biomarker_result <- list()
#
# study_score_ssgsea(study = names(mat_tpm_list)[2],
#                    score = 'housekeeping')
#
biomarker_result <- mapply(study_score_ssgsea, study = c("Hugo_MEL", "Riaz_MEL"), score = names(response_scores))
# Needs predefined:
# response_scores: named list of list of genesets in gene symbols
# run_ssgsea function found in ../2025_08_28/script/functions.R
study_score_ssgsea <- function(study, score){
# Load data from study
mat_tpm <- mat_tpm_list[[study]]
mat_dgd <- mat_dgd_list[[study]]
genes <- response_scores[[score]]
# Map the ensembl genes in the data to gene symbols
mapping_ensembl_to_symbol <- getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol"),
filters = "ensembl_gene_id",
values = rownames(mat_dgd),
mart = mart
)
# Find the ensembl mapping of the gene list
geneset_mapping <- mapping_ensembl_to_symbol %>% filter(hgnc_symbol %in% genes)
# Use the ensembl IDs in final geneset since those are the IDs of the data
geneset <- list(score = geneset_mapping$ensembl_gene_id)
# Run ssGSEA and save output
ssgsea_tpm <- run_ssgsea(mat_tpm, geneset)
ssgsea_dgd <- run_ssgsea(mat_dgd, geneset)
# Prep for comparing output
df_ssgsea_tpm <- ssgsea_tpm %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'TPM', )
df_ssgsea_dgd <- ssgsea_dgd %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'DGD')
df_plot <- rbind(df_ssgsea_tpm, df_ssgsea_dgd)
# Plot
df_plot %>% ggplot(aes(x = Sample, y = score, fill = Data)) +
geom_col(position = 'dodge') +
scale_fill_manual(values = c('darkgrey', 'grey30')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = glue('{study} - {score} score'),
subtitle = glue('{score} is based on {length(genes)} genes.'),
y = glue('{score} score'))
ggsave(glue('plot/04_02_{study}_{score}.png'), width = 20, height = 5)
# Table output
new_name_TPM <- glue("TPM_{score}")
new_name_DGD <- glue("DGD_{score}")
df_table <- df_plot %>%
pivot_wider(names_from = Data,
values_from = score) %>%
rename(!!new_name_TPM := TPM,
!!new_name_DGD := DGD)
# if (add_to_study){
#   df_table_initial <- read.xlsx("table/04_biomarker_scores.xlsx", sheetName = study)
#   df_table_initial$NA. <- NULL
#   df_table_export <- left_join(df_table_initial, df_table)
#
# }
#
# # Write your dataframe to Excel
# write.xlsx(x = df_table_export,
#            file = "table/04_biomarker_scores.xlsx",
#            sheetName = study,
#            row.names = TRUE, # Cannot be FALSE...
#            append = TRUE) # Can only append new sheets
if(is.null(biomarker_result[[study]])){
df_table_export <- df_table
} else {
df_table_export <- left_join(biomarker_result[[study]], df_table)
}
biomarker_result[[study]] <- df_table_export
return(biomarker_result)
}
# ONLY FOR INITIALIZING
biomarker_result <- list()
#
# study_score_ssgsea(study = names(mat_tpm_list)[2],
#                    score = 'housekeeping')
#
biomarker_result <- mapply(study_score_ssgsea, study = c("Hugo_MEL", "Riaz_MEL"), score = names(response_scores))
biomarker_result
study
biomarker_result <- list()
for (study in names(mat_tpm_list)){
# Load data from study
mat_tpm <- mat_tpm_list[[study]]
mat_dgd <- mat_dgd_list[[study]]
for (score in response_scores){
genes <- response_scores[[score]]
# Map the ensembl genes in the data to gene symbols
mapping_ensembl_to_symbol <- getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol"),
filters = "ensembl_gene_id",
values = rownames(mat_dgd),
mart = mart
)
# Find the ensembl mapping of the gene list
geneset_mapping <- mapping_ensembl_to_symbol %>% filter(hgnc_symbol %in% genes)
# Use the ensembl IDs in final geneset since those are the IDs of the data
geneset <- list(score = geneset_mapping$ensembl_gene_id)
# Run ssGSEA and save output
ssgsea_tpm <- run_ssgsea(mat_tpm, geneset)
ssgsea_dgd <- run_ssgsea(mat_dgd, geneset)
# Prep for comparing output
df_ssgsea_tpm <- ssgsea_tpm %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'TPM', )
df_ssgsea_dgd <- ssgsea_dgd %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'DGD')
df_plot <- rbind(df_ssgsea_tpm, df_ssgsea_dgd)
# Plot
df_plot %>% ggplot(aes(x = Sample, y = score, fill = Data)) +
geom_col(position = 'dodge') +
scale_fill_manual(values = c('darkgrey', 'grey30')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = glue('{study} - {score} score'),
subtitle = glue('{score} is based on {length(genes)} genes.'),
y = glue('{score} score'))
ggsave(glue('plot/04_02_{study}_{score}.png'), width = 20, height = 5)
# Table output
new_name_TPM <- glue("TPM_{score}")
new_name_DGD <- glue("DGD_{score}")
df_table <- df_plot %>%
pivot_wider(names_from = Data,
values_from = score) %>%
rename(!!new_name_TPM := TPM,
!!new_name_DGD := DGD)
# if (add_to_study){
#   df_table_initial <- read.xlsx("table/04_biomarker_scores.xlsx", sheetName = study)
#   df_table_initial$NA. <- NULL
#   df_table_export <- left_join(df_table_initial, df_table)
#
# }
#
# # Write your dataframe to Excel
# write.xlsx(x = df_table_export,
#            file = "table/04_biomarker_scores.xlsx",
#            sheetName = study,
#            row.names = TRUE, # Cannot be FALSE...
#            append = TRUE) # Can only append new sheets
if(is.null(biomarker_result[[study]])){
df_table_export <- df_table
} else {
df_table_export <- left_join(biomarker_result[[study]], df_table)
}
biomarker_result[[study]] <- df_table_export
}
}
score
response_scores
biomarker_result <- list()
for (study in names(mat_tpm_list)){
# Load data from study
mat_tpm <- mat_tpm_list[[study]]
mat_dgd <- mat_dgd_list[[study]]
for (score in names(response_scores)){
genes <- response_scores[[score]]
# Map the ensembl genes in the data to gene symbols
mapping_ensembl_to_symbol <- getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol"),
filters = "ensembl_gene_id",
values = rownames(mat_dgd),
mart = mart
)
# Find the ensembl mapping of the gene list
geneset_mapping <- mapping_ensembl_to_symbol %>% filter(hgnc_symbol %in% genes)
# Use the ensembl IDs in final geneset since those are the IDs of the data
geneset <- list(score = geneset_mapping$ensembl_gene_id)
# Run ssGSEA and save output
ssgsea_tpm <- run_ssgsea(mat_tpm, geneset)
ssgsea_dgd <- run_ssgsea(mat_dgd, geneset)
# Prep for comparing output
df_ssgsea_tpm <- ssgsea_tpm %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'TPM', )
df_ssgsea_dgd <- ssgsea_dgd %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'DGD')
df_plot <- rbind(df_ssgsea_tpm, df_ssgsea_dgd)
# Plot
df_plot %>% ggplot(aes(x = Sample, y = score, fill = Data)) +
geom_col(position = 'dodge') +
scale_fill_manual(values = c('darkgrey', 'grey30')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = glue('{study} - {score} score'),
subtitle = glue('{score} is based on {length(genes)} genes.'),
y = glue('{score} score'))
ggsave(glue('plot/04_02_{study}_{score}.png'), width = 20, height = 5)
# Table output
new_name_TPM <- glue("TPM_{score}")
new_name_DGD <- glue("DGD_{score}")
df_table <- df_plot %>%
pivot_wider(names_from = Data,
values_from = score) %>%
rename(!!new_name_TPM := TPM,
!!new_name_DGD := DGD)
# if (add_to_study){
#   df_table_initial <- read.xlsx("table/04_biomarker_scores.xlsx", sheetName = study)
#   df_table_initial$NA. <- NULL
#   df_table_export <- left_join(df_table_initial, df_table)
#
# }
#
# # Write your dataframe to Excel
# write.xlsx(x = df_table_export,
#            file = "table/04_biomarker_scores.xlsx",
#            sheetName = study,
#            row.names = TRUE, # Cannot be FALSE...
#            append = TRUE) # Can only append new sheets
if(is.null(biomarker_result[[study]])){
df_table_export <- df_table
} else {
df_table_export <- left_join(biomarker_result[[study]], df_table)
}
biomarker_result[[study]] <- df_table_export
}
}
biomarker_result
write.xlsx(biomarker_result, file = "04_biomarker_scores.xlsx")
?write.xlsx
openxlsx::write.xlsx(biomarker_result, file = "04_biomarker_scores.xlsx")
test <- function(studies, scores) {
for (study in studies){
# Load data from study
mat_tpm <- mat_tpm_list[[study]]
mat_dgd <- mat_dgd_list[[study]]
for (score in scores){
genes <- response_scores[[score]]
# Map the ensembl genes in the data to gene symbols
mapping_ensembl_to_symbol <- getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol"),
filters = "ensembl_gene_id",
values = rownames(mat_dgd),
mart = mart
)
# Find the ensembl mapping of the gene list
geneset_mapping <- mapping_ensembl_to_symbol %>% filter(hgnc_symbol %in% genes)
# Use the ensembl IDs in final geneset since those are the IDs of the data
geneset <- list(score = geneset_mapping$ensembl_gene_id)
# Run ssGSEA and save output
ssgsea_tpm <- run_ssgsea(mat_tpm, geneset)
ssgsea_dgd <- run_ssgsea(mat_dgd, geneset)
# Prep for comparing output
df_ssgsea_tpm <- ssgsea_tpm %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'TPM', )
df_ssgsea_dgd <- ssgsea_dgd %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'DGD')
df_plot <- rbind(df_ssgsea_tpm, df_ssgsea_dgd)
# Plot
df_plot %>% ggplot(aes(x = Sample, y = score, fill = Data)) +
geom_col(position = 'dodge') +
scale_fill_manual(values = c('darkgrey', 'grey30')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = glue('{study} - {score} score'),
subtitle = glue('{score} is based on {length(genes)} genes.'),
y = glue('{score} score'))
ggsave(glue('plot/04_02_{study}_{score}.png'), width = 20, height = 5)
# Table output
new_name_TPM <- glue("TPM_{score}")
new_name_DGD <- glue("DGD_{score}")
df_table <- df_plot %>%
pivot_wider(names_from = Data,
values_from = score) %>%
rename(!!new_name_TPM := TPM,
!!new_name_DGD := DGD)
if(is.null(biomarker_result[[study]])){
df_table_export <- df_table
} else {
df_table_export <- left_join(biomarker_result[[study]], df_table)
}
biomarker_result[[study]] <- df_table_export
}
}
return(biomarker_result)
}
# List of gene sets
response_scores <- list(housekeeping = c("ACTB", "GAPDH", "B2M", "PPIA", "RPLP0", "HPRT1", "PGK1"),
housekeeping_2 = c("ACTB", "GAPDH", "B2M"),
TGEP = c("TIGIT", "CD27", "CD8A", "PDCD1LG2", "LAG3", "CD274",
"CXCR6", "CMKLR1", "NKG7", "CCL5", "PSMB10", "IDO1",
"CXCL9", "HLA-DQA1", "CD276", "STAT1", "HLA-DRB1", "HLA-E"))
names(mat_dgd_list)
studies <- names(mat_dgd_list)
test <- function(studies, scores) {
for (study in studies){
# Load data from study
mat_tpm <- mat_tpm_list[[study]]
mat_dgd <- mat_dgd_list[[study]]
for (score in scores){
genes <- response_scores[[score]]
# Map the ensembl genes in the data to gene symbols
mapping_ensembl_to_symbol <- getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol"),
filters = "ensembl_gene_id",
values = rownames(mat_dgd),
mart = mart
)
# Find the ensembl mapping of the gene list
geneset_mapping <- mapping_ensembl_to_symbol %>% filter(hgnc_symbol %in% genes)
# Use the ensembl IDs in final geneset since those are the IDs of the data
geneset <- list(score = geneset_mapping$ensembl_gene_id)
# Run ssGSEA and save output
ssgsea_tpm <- run_ssgsea(mat_tpm, geneset)
ssgsea_dgd <- run_ssgsea(mat_dgd, geneset)
# Prep for comparing output
df_ssgsea_tpm <- ssgsea_tpm %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'TPM', )
df_ssgsea_dgd <- ssgsea_dgd %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'DGD')
df_plot <- rbind(df_ssgsea_tpm, df_ssgsea_dgd)
# Plot
df_plot %>% ggplot(aes(x = Sample, y = score, fill = Data)) +
geom_col(position = 'dodge') +
scale_fill_manual(values = c('darkgrey', 'grey30')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = glue('{study} - {score} score'),
subtitle = glue('{score} is based on {length(genes)} genes.'),
y = glue('{score} score'))
ggsave(glue('plot/04_02_{study}_{score}.png'), width = 20, height = 5)
# Table output
new_name_TPM <- glue("TPM_{score}")
new_name_DGD <- glue("DGD_{score}")
df_table <- df_plot %>%
pivot_wider(names_from = Data,
values_from = score) %>%
rename(!!new_name_TPM := TPM,
!!new_name_DGD := DGD)
if(is.null(biomarker_result[[study]])){
df_table_export <- df_table
} else {
df_table_export <- left_join(biomarker_result[[study]], df_table)
}
biomarker_result[[study]] <- df_table_export
}
}
return(biomarker_result)
}
test(study_list = c('Hugo_MEL'), score_list = c('housekeeping_2'))
test <- function(study_list, score_list) {
for (study in study_list){
# Load data from study
mat_tpm <- mat_tpm_list[[study]]
mat_dgd <- mat_dgd_list[[study]]
for (score in score_list){
genes <- response_scores[[score]]
# Map the ensembl genes in the data to gene symbols
mapping_ensembl_to_symbol <- getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol"),
filters = "ensembl_gene_id",
values = rownames(mat_dgd),
mart = mart
)
# Find the ensembl mapping of the gene list
geneset_mapping <- mapping_ensembl_to_symbol %>% filter(hgnc_symbol %in% genes)
# Use the ensembl IDs in final geneset since those are the IDs of the data
geneset <- list(score = geneset_mapping$ensembl_gene_id)
# Run ssGSEA and save output
ssgsea_tpm <- run_ssgsea(mat_tpm, geneset)
ssgsea_dgd <- run_ssgsea(mat_dgd, geneset)
# Prep for comparing output
df_ssgsea_tpm <- ssgsea_tpm %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'TPM', )
df_ssgsea_dgd <- ssgsea_dgd %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'DGD')
df_plot <- rbind(df_ssgsea_tpm, df_ssgsea_dgd)
# Plot
df_plot %>% ggplot(aes(x = Sample, y = score, fill = Data)) +
geom_col(position = 'dodge') +
scale_fill_manual(values = c('darkgrey', 'grey30')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = glue('{study} - {score} score'),
subtitle = glue('{score} is based on {length(genes)} genes.'),
y = glue('{score} score'))
ggsave(glue('plot/04_02_{study}_{score}.png'), width = 20, height = 5)
# Table output
new_name_TPM <- glue("TPM_{score}")
new_name_DGD <- glue("DGD_{score}")
df_table <- df_plot %>%
pivot_wider(names_from = Data,
values_from = score) %>%
rename(!!new_name_TPM := TPM,
!!new_name_DGD := DGD)
if(is.null(biomarker_result[[study]])){
df_table_export <- df_table
} else {
df_table_export <- left_join(biomarker_result[[study]], df_table)
}
biomarker_result[[study]] <- df_table_export
}
}
return(biomarker_result)
}
test(study_list = c('Hugo_MEL'), score_list = c('housekeeping_2'))
test(study_list = studies, score_list = c('housekeeping_2'))
# List of gene sets
response_scores <- list(housekeeping = c("ACTB", "GAPDH", "B2M", "PPIA", "RPLP0", "HPRT1", "PGK1"),
TGEP = c("TIGIT", "CD27", "CD8A", "PDCD1LG2", "LAG3", "CD274",
"CXCR6", "CMKLR1", "NKG7", "CCL5", "PSMB10", "IDO1",
"CXCL9", "HLA-DQA1", "CD276", "STAT1", "HLA-DRB1", "HLA-E"))
biomarker_result
saveRDS(biomarker_result, 'rds/04_biomarker_result.rds')
biomarker_analysis <- function(study_list, score_list) {
for (study in study_list){
# Load data from study
mat_tpm <- mat_tpm_list[[study]]
mat_dgd <- mat_dgd_list[[study]]
for (score in score_list){
genes <- response_scores[[score]]
# Map the ensembl genes in the data to gene symbols
mapping_ensembl_to_symbol <- getBM(
attributes = c("ensembl_gene_id", "hgnc_symbol"),
filters = "ensembl_gene_id",
values = rownames(mat_dgd),
mart = mart
)
# Find the ensembl mapping of the gene list
geneset_mapping <- mapping_ensembl_to_symbol %>% filter(hgnc_symbol %in% genes)
# Use the ensembl IDs in final geneset since those are the IDs of the data
geneset <- list(score = geneset_mapping$ensembl_gene_id)
# Run ssGSEA and save output
ssgsea_tpm <- run_ssgsea(mat_tpm, geneset)
ssgsea_dgd <- run_ssgsea(mat_dgd, geneset)
# Prep for comparing output
df_ssgsea_tpm <- ssgsea_tpm %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'TPM', )
df_ssgsea_dgd <- ssgsea_dgd %>% t() %>% as.data.frame() %>%
rownames_to_column('Sample') %>% mutate(Data = 'DGD')
df_plot <- rbind(df_ssgsea_tpm, df_ssgsea_dgd)
# Plot
df_plot %>% ggplot(aes(x = Sample, y = score, fill = Data)) +
geom_col(position = 'dodge') +
scale_fill_manual(values = c('darkgrey', 'grey30')) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = glue('{study} - {score} score'),
subtitle = glue('{score} is based on {length(genes)} genes.'),
y = glue('{score} score'))
ggsave(glue('plot/04_02_{study}_{score}.png'), width = 20, height = 5)
# Table output
new_name_TPM <- glue("TPM_{score}")
new_name_DGD <- glue("DGD_{score}")
df_table <- df_plot %>%
pivot_wider(names_from = Data,
values_from = score) %>%
rename(!!new_name_TPM := TPM,
!!new_name_DGD := DGD)
if(is.null(biomarker_result[[study]])){
df_table_export <- df_table
} else {
df_table_export <- left_join(biomarker_result[[study]], df_table)
}
biomarker_result[[study]] <- df_table_export
}
}
return(biomarker_result)
}
mat_dgd_list <- readRDS('rds/04_mat_dgd_list.rds')
mat_tpm_list <- readRDS('rds/04_mat_tpm_list.rds')
# Translate gene symbols to ensembl
mart <- useMart("ensembl", dataset = "hsapiens_gene_ensembl")
# List of gene sets
response_scores <- list(housekeeping = c("ACTB", "GAPDH", "B2M", "PPIA", "RPLP0", "HPRT1", "PGK1"),
TGEP = c("TIGIT", "CD27", "CD8A", "PDCD1LG2", "LAG3", "CD274",
"CXCR6", "CMKLR1", "NKG7", "CCL5", "PSMB10", "IDO1",
"CXCL9", "HLA-DQA1", "CD276", "STAT1", "HLA-DRB1", "HLA-E"))
# ONLY FOR INITIALIZING
biomarker_result <- list()
# biomarker_result <- readRDS('rds/04_biomarker_result.rds')
study_list_full <- names(mat_dgd_list)
score_list_full <- names(response_scores)
biomarker_result
# Run with all datasets and all scores
biomarker_result <- biomarker_analysis(study_list = study_list_full, score_list = score_list_full)
source('../2025_08_28/script/functions.R')
# Run with all datasets and all scores
biomarker_result <- biomarker_analysis(study_list = study_list_full, score_list = score_list_full)
setwd('~/Documents/projects/project_DGD/cancer_sample_normalization/')
